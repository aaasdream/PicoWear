這是Micropython中一個Mpu6050的驅動
Mpu6050_mahony.py
這個 MPU6050 類別是為了在 MicroPython 環境中使用 MPU6050 陀螺儀和加速度計感測器設計的。
它可以進行平躺Roll Pitch ，站立時傾斜角度tilt_angles的計算，並透過Mahony濾波算法來實現更準確的姿態估計。
使用範例
from machine import Pin, I2C, RTC,Timer
from machine import mem32
import Pico_Wear

display, mpu = Pico_Wear.Pico_Wear_Init()

務必每秒一百次計算才能取得穩定角度建議搭配TimeToDoFile
計算姿態與主程式使用不同TimeToDo以提升運算頻率
mpu.update_mahony()
mpu.calculate_tilt_angles()

主要方法
__init__(self, i2c, addr=0x68)
    初始化 MPU6050 類別。
    參數 i2c 是必須的，它是一個已配置的 I2C 對象。
    參數 addr 是設備的 I2C 地址，默認為 0x68。
calibrate(self, samples=100)
    校準 MPU6050，減少讀數誤差。這個方法會收集多個樣本來計算平均偏差。
update_mahony(self)
    計算mpu6050平躺的。更新姿態估計，使用 Mahony 濾波算法。
    這個方法會自動根據加速度計和陀螺儀的讀數更新四元數，從而得到較準確的姿態角。
    每秒需要進行100運算,運算結果使用get_angles() 取得
get_angles(self)
    獲取計算後的歐拉角（Roll, Pitch, Yaw）。角度以度（°）為單位。
read_accel(self)
    讀取加速度數據，從 MPU6050 的加速度計傳感器獲取數據。返回的加速度數據經過轉換為 g 單位（重力加速度的倍數）。
read_gyro(self)
    讀取陀螺儀數據，從 MPU6050 的陀螺儀傳感器獲取數據。返回的陀螺儀數據經過轉換為度每秒（deg/s），描述角速度。
read_accel_raw(self)
    直接讀取原始加速度數據。
calculate_tilt_angles_with_filter(self)
    計算mpu6050站立之後的傾斜角度，使用互補濾波器來平滑角度變化，以應對快速動態變化。
    此方法返回的角度以度（°）為單位，並會將角度維持在 -180° 到 180° 的範圍內。
Get_tilt_angles(self)
    取得Get_tilt_angles計算後的角度
calibrate_tilt(self, num_samples=100)
    校準站立時傾斜角度，主要用於設置加速度計的偏移值。




